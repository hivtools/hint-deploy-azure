@description('The location where the resources will be created.')
param location string = resourceGroup().location

@description('The prefix to use for all resource names')
param prefix string

@description('Name of the existing vnet resource')
param vnetName string

@description('The name of the container app environment to create.')
param containerAppsEnvironmentName string

resource vnet 'Microsoft.Network/virtualNetworks@2024-01-01' existing = {
  name: vnetName
}

resource containerAppSubnet 'Microsoft.Network/virtualNetworks/subnets@2023-11-01' existing = {
  name: '${prefix}-hintr-subnet'
  parent: vnet
}

// ------------------
// CONTAINER APP ENVIRONMENT
// ------------------

@description('The name of the log analytics workspace. If set, it overrides the name generated by the template.')
param logAnalyticsWorkspaceName string

resource logAnalyticsWorkspace 'Microsoft.OperationalInsights/workspaces@2021-06-01' existing = {
  name: logAnalyticsWorkspaceName
}

// TODO: Move this into an App configuration instead of an env var
@description('Worker config to use')
param workerConfigString string = loadTextContent('../../config/workers.json')
param workerConfig object = json(workerConfigString)

resource containerAppsEnvironment 'Microsoft.App/managedEnvironments@2025-02-02-preview' = {
  name: containerAppsEnvironmentName
  location: location
  properties: {
    appLogsConfiguration: {
      destination: 'log-analytics'
      logAnalyticsConfiguration: {
        customerId: logAnalyticsWorkspace.properties.customerId
        sharedKey: logAnalyticsWorkspace.listKeys().primarySharedKey
      }
    }
    workloadProfiles: workerConfig.workload_profiles
    vnetConfiguration: {
      infrastructureSubnetId: containerAppSubnet.id
      internal: true
    }
  }
}

// ------------------
// Storage mounts
// ------------------

@description('File shares to create')
param fileShares array

@description('Storage account name')
param storageAccountName string

resource storageAccount 'Microsoft.Storage/storageAccounts@2023-05-01' existing = {
  name: storageAccountName
}

@description('Create configured storage mounts')
resource storageMountsRW 'Microsoft.App/managedEnvironments/storages@2024-03-01' = [for shareName in fileShares: {
  parent: containerAppsEnvironment
  name: '${shareName}-mount-rw'
  properties: {
    azureFile: {
      accountName: storageAccount.name
      shareName: '${shareName}-share'
      accountKey: storageAccount.listKeys().keys[0].value
      accessMode: 'ReadWrite'
    }
  }
}]

@description('Create configured storage mounts')
resource storageMountsR 'Microsoft.App/managedEnvironments/storages@2024-03-01' = [for shareName in fileShares: {
  parent: containerAppsEnvironment
  name: '${shareName}-mount-r'
  properties: {
    azureFile: {
      accountName: storageAccount.name
      shareName: '${shareName}-share'
      accountKey: storageAccount.listKeys().keys[0].value
      accessMode: 'ReadOnly'
    }
  }
}]


// ------------------
// Private DNS
// ------------------

module privateDnsZone 'ca_private_dns.bicep' = {
  name: 'dns-zone-ca'
  params: {
    envDefaultDomain: containerAppsEnvironment.properties.defaultDomain
    envStaticIp: containerAppsEnvironment.properties.staticIp
    vnetName: vnet.name
  }
}
